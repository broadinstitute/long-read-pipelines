version 1.0

import "../../../tasks/Utility/GeneralUtils.wdl" as GU

import "MergeHiFiFastQs.wdl"
import "HifiasmOnDiploid.wdl" as Hifiasm

workflow PBAssembleWithHifiasm {

    meta {
        description:
        "A workflow that performs single, diploid sample genome assembly on PacBio HiFi reads from one or more SMRT cells. The multiple SMRT cells data are merged prior to assembly."
    }
    parameter_meta {
        ccs_fqs:            "GCS path to CCS fastq files"
        prefix:             "prefix for output files"

        short_reads_threshold:
        "A threshold below which the reads will be classified as short, used in read-length related metrics collection workflow."

        ref_fasta_for_eval: "Reference Fasta used for evaluating the assembly"
        gcs_out_root_dir:   "GCS bucket to store the reads, variants, and metrics files"

        # output
        nanoplot_u_summ:
        "A few metrics output by Nanoplot on the uBAM"
        seqkit_stats:
        "A few metrics output by seqkit stats"
        read_len_summaries:
        "A few metrics summarizing the read length distribution"
        read_len_peaks:
        "Peaks of the read length distribution (heruistic)"
        read_len_deciles:
        "Deciles of the read length distribution"
        fastq_metrics_files:
        "A map where keys are summary-names and values are paths to files generated from the various QC/metrics tasks"

        hifiasm_primary_alt_outputs:
        "Files generated by Hifiasm in the primary-alt mode"
        hifiasm_hap_outputs:
        "Files generated by Hifiasm in the haplotype-resolve mode"
        asm_summary:
        # note: "It should be a Map[String, Int] conceptually, but given that WDL/Cromwell/Terra enforces a Int32 max value on Int types, human genomes sizes overflow that value, hence we use String"
        "Summary on critical metrics on the Hifiasm [primary, H1, H2] FASTA."
        asm_metrics_files:
        "A collection of metrics files produced with QUAST"
    }

    input {
        Array[File] ccs_fqs

        String prefix

        Int short_reads_threshold

        File? ref_fasta_for_eval

        String gcs_out_root_dir

        String disk_type = "SSD"
        Array[String] gcp_zones = ['us-central1-a', 'us-central1-b', 'us-central1-c', 'us-central1-f']
    }

    output {
        String last_processing_date = today.yyyy_mm_dd

        ########################################
        File merged_fq = MergeFQ.merged_fq

        ########################################
        Map[String, Float] seqkit_stats = MergeFQ.seqkit_stats

        # FASTQ metrics
        Array[Int] read_len_peaks = MergeFQ.read_len_peaks
        Array[Int] read_len_deciles = MergeFQ.read_len_deciles
        Map[String, String] read_len_summaries = MergeFQ.read_len_summaries

        Map[String, Float]? nanoplot_u_summ = MergeFQ.nanoplot_u_summ
        Map[String, String] fastq_metrics_files = MergeFQ.metrics_files

        ########################################
        Map[String, File] hifiasm_hap_outputs = Assemble.hap_outputs

        Map[String, File] hifiasm_primary_alt_outputs = Assemble.primary_alt_outputs

        # asm metrics
        Map[String, String] asm_summary = Assemble.asm_summary
        Map[String, String] asm_metrics_files = Assemble.asm_metrics_files
    }

    # Finalize data
    String workflow_name = "PBAssembleWithHifiasm"

    String outdir = sub(gcs_out_root_dir, "/$", "") + "/" + workflow_name + "/~{prefix}"

    #########################################################################################
    # aggregation
    call MergeHiFiFastQs.Work as MergeFQ { input:
        ccs_fqs = ccs_fqs,
        prefix = prefix,
        short_reads_threshold = short_reads_threshold,
        disk_type = disk_type,
        gcs_out_root_dir = outdir
    }

    #########################################################################################
    # assembly
    call Hifiasm.Assemble { input:
        reads = MergeFQ.merged_fq,
        prefix = prefix,
        ref_fasta_for_eval = ref_fasta_for_eval,
        gcp_zones = gcp_zones,
        gcs_out_root_dir = outdir
    }

    #########################################################################################
    call GU.GetTodayDate as today {}
}
