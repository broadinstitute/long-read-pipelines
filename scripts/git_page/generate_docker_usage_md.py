import argparse
import os
import logging
import utility as util

# Get the current working directory
cwd = os.getcwd()

# Get the path to the scripts directory
scripts_dir = os.path.join(cwd, "scripts")

# Get the path to the git_page directory
git_page_dir = os.path.join(scripts_dir, "git_page")

Logger = logging.getLogger(__name__)
logging.basicConfig()


def main():
    # read command-line arguments
    parser = argparse.ArgumentParser(
        description="Generate docker_usage.md file by running the docker_usage_sum.py and using the output to generate the markdown file."
    )
    parser.add_argument("--output_path", help="Path to the out markdown file")
    parser.add_argument("--debug", action="store_true", help="verbose logging")

    args = parser.parse_args()
    util.set_logging_level(args)

    current_dir = os.path.abspath(os.path.dirname(__file__))
    parent_dir = os.path.abspath(os.path.join(current_dir, os.pardir))
    docker_script_dir = os.path.join(parent_dir, "docker")
    OUT_FILE_BASENAME = "Dockers_In_Use"
    OUT_SUMMARY_TSV = os.path.join(docker_script_dir, OUT_FILE_BASENAME + ".tsv")

    if args.output_path:
        markdown_file = os.path.join(args.output_path, OUT_FILE_BASENAME + ".md")
    else:
        markdown_file = os.path.join(current_dir, OUT_FILE_BASENAME + ".md")

    resolved_markdown_file = os.path.abspath(markdown_file)

    Logger.debug(f"markdown_file: {resolved_markdown_file}")

    # Run docker_usage_sum.py
    docker_usage_sum_cmd = ["python3",
                            os.path.join(docker_script_dir, "docker_usage_sum.py")]
    util.run_command(docker_usage_sum_cmd)

    markdown_table = tsv_to_markdown(tsv_file=OUT_SUMMARY_TSV)
    write_docker_usage_to_markdown(
        resolved_markdown_file=resolved_markdown_file, markdown_table=markdown_table
    )


def tsv_to_markdown(tsv_file: str) -> str:
    """
    Converts a tsv file to markdown table format
    @param tsv_file:
    @return:
    """
    with open(tsv_file, "r") as f:
        lines = f.readlines()

    markdown_table = "|".join(lines[0].split("\t"))
    markdown_table += "|".join(["---"] * len(lines[0].split("\t")))
    markdown_table += "\n"
    for line in lines[1:]:
        markdown_table += "|".join(line.split("\t"))

    return markdown_table


def write_docker_usage_to_markdown(resolved_markdown_file, markdown_table):
    with open(resolved_markdown_file, "w") as md_file:
        md_file.write("# Docker Usage Summary\n\n")
        md_file.write("The following table lists the docker images used in the "
                      "workflows in this repository.\n\n")
        md_file.write("The table is generated by running the docker_usage_sum.py"
                      " script.\n\n")
        md_file.write("The script is run by the ../git_page/generate_docker_usage_md.py"
                      " script.\n\n")
        md_file.write(markdown_table)


if __name__ == "__main__":
    main()
